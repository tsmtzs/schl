% \iffalse meta-comment
%
% Copyright (C) 2019 by Tasos Tsesmetzis
%
% This file may be distributed and/or modified under the
% conditions of the MIT License. 
%
% \fi

% \iffalse
%<package>\NeedsTeXFormat{LaTeX2e}
%<package>\ProvidesPackage{schl}
%<package>[2019/11/07 v1.0 Custom package]
%
% \iffalse meta-comment
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% REQUIRED PACKAGES
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \fi
%<package>\RequirePackage{fontspec}
%<package>\RequirePackage[shortlabels]{enumitem}
%<package>\RequirePackage{mdframed}
%<package>\RequirePackage{amsmath}
%<package>\RequirePackage{calc}
%<package>\RequirePackage{etoolbox}
%
% \iffalse meta-comment
%% 
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% PACKAGE OPTIONS
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \fi
%<schl-template>\ProvidesFile{languages/schl-template.def}
%
%<package>\DeclareOption{default}{
%<package>  \input{languages/schl-template.def}
%<package>}
%
%<schl-greek>\ProvidesFile{languages/schl-greek.def}
%
%<package>\DeclareOption{greek}{
%<package>  \input{languages/schl-greek.def}
%<package>}
%
%<schl-english>\ProvidesFile{languages/schl-english.def}
%
%<package>\DeclareOption{english}{
%<package>  \input{languages/schl-english.def}
%<package>}
%
%  \iffalse meta-comment
%%  Execute default options.
%  \fi
%<package>\ExecuteOptions{default}
%  
%<package>\ProcessOptions\relax
%%
% \iffalse meta-comment
%%
%%
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% LOCALIZATION
%% To localize the package schl, define the following macros
%% with each term in your language. Put these definitions in
%% a file schl-<your-language>.def.
%% \grade@term             : 
%% \subject@term           : 
%% \testwriter@term        : 
%% \testsupervisor@term    : 
%% \date@term              : Used by \datefield.
%% \schoolyear@term        : 
%% \schoolyearabbr@term    : An abbreviation for the word 'schoolyear'.
%% \examperiod@term        : 
%% \time@term              : 
%% \duration@term          : 
%% \examnoabbr@term        : An abbreviation for the exam number of a student.
%% \fullname@term          : Used by \fullname.
%% \deadline@term          : Used by \deadline.
%% \remark@term            : Used by \remark.
%% \reminder@term          : Used by \reminder.
%% \theoryheader@term      : Used by \theorypart. It is the word 'THEORY'.
%% \exerciseheader@term    : Used by \exercisepart. It is the word 'EXERCISES'.
%% \worksheet@term         : Used by \worksheethd.
%% \termtest@term          : Used by \examhd. It is the word that corresponds to a
%%                           summary test during the year.
%% \exams@term             : Used by \finalexamhd. The word 'EXAMS'.
%% \period@term            : Used by \finalexamhd. The word 'PERIOD'.
%% \headmaster@term        : Used by \signatures.
%% \answerabbr@term        : Used by \answer. An abbreviation for the word 'answer'.
%% \exercise@term          : Used by the environment 'exercise'.
%% \question@term          : Used by the environment 'question'.
%% \task@term              : Used by the environment 'task'.
%% \solution@term          : Used by \solution.
%% \hint@term              : Used by \hint.
%% \points@term            : Used by \points. You might need to use an 'if' to distinguise
%%                           the cases for one or many points.
%% \trueabbr@term          : Used by \truefalselabel. The first letter of True.
%% \falseabbr@term         : Used by \truefalselabel. The first letter of False.
%%
%% Other internal macros that are used are 
%% \schl@wish             : A wish for good luck, usually printed in tests. Used by \wish.
%% \schl@headmaster       : The name of the headmaster. It is set with \headmaster.
%% \schl@teacher          : Teacher's name. It is set with \teacher.
%% \schl@subject          : The subject of the test, worksheet etc. (algebra, ...). It is set with \subject.
%%                          Used by \schoollogo.
%% \schl@grade            : The grade. It is set with \grade. Used by \schoollogo
%% \schl@date             : The date that the produced document will be given to students.
%%                          Defined with \setdate.
%% \schl@examtime         : The time of the exam. It is set with \examtime.
%% \schl@schoolyear       : School year is set with \schoolyear.
%% \schl@authorities      : This macros define the authorities that the school belongs to.
%%                          E.x. might be the Ministry of Education, etc
%%                          It is set with \authorities
%%                          and are used in \authoritylogo.
%% \schl@school           : The name of the school.Is set with \school. It is used by \schoollogo
%%                          \authoritylogo.
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \fi
%
% \iffalse meta-comment
%%
%%
%% Default line thickness for macro \blankspace.
% \fi
%<package>\def\schl@rulethickness{0.3pt}
% \iffalse meta-comment
%% Set \schl@rulethickness
% \fi
%<package>\def\rulethickness#1{%
%<package>  \def\schl@rulethickness{#1}
%<package> }
%
%   \iffalse meta-comment
%%
%% Macro \signatures is used to write the names of the teacher(s) and the headmaster. 
%% A handwritten signature is written in the right or above of those names.
%% \signatures uses a \parbox with length \signatureslength.
%% Each new name is written in a new line. The length between lines is
%% \signaturelineskip.
% \fi
%<package>\newlength{\signatureslength}
%<package>\setlength{\signatureslength}{13em}
%<package>\newlength{\signaturelineskip}
%<package>\setlength{\signaturelineskip}{7ex}
%
% \iffalse meta-comment
%%
%% Lengths \leftmatchwidth and \rightmatchwidth are used in macro \matchingque.
%% Both specify the length of a \parbox. \leftmatchwidth is the length of the left
%% column of the matching question, and \rightmatchwidth, is the length of the
%% right. The default length is 150pt.
% \fi
%<package>\newlength{\leftmatchwidth}
%<package>\newlength{\rightmatchwidth}
%<package>\setlength{\leftmatchwidth}{150pt}
%<package>\setlength{\rightmatchwidth}{150pt}
% 
% \iffalse meta-comment
%%
%% The following length is used inside the truefalse environment.
%% It specifies the length of a \parbox. The letters T (true) and F
%% are the text of this \parbox.
% \fi
%<package>\newlength{\truefalselength}
%<package>\setlength{\truefalselength}{50pt}
%
%
% \iffalse meta-comment
%%
%% Macro \truefalselabel prints T - F inside a \parbox.
%% \parbox's argument height is given the value 0pt.
%% This is done so that the top of the letters T - F allign
%% with the line of the true-false question.
%% This behaviour is heavily dependend on the font used and font size (\large here).
%%
%% \trueabbr@term and \falseabbr@term are the first letters of the words True, False.
% \fi
%<package>\def\truefalselabel{\parbox[t][0pt][c]{\truefalselength}{\large\trueabbr@term\hfill\falseabbr@term}}
%
% \iffalse meta-comment
%%
%% Macro \truefalsesquares prints two squares inside a \parbox.
%% \parbox's argument height is given the value 0pt.
%% This is done so that the top of the squares align
%% with the line of the true-false question.
%% This behaviour is heavily dependend on the font used and font size (\large here).
% \fi
%<package>\def\truefalsesquares{\parbox[t][0pt][c]{\truefalselength}{\large$\square$\hfill$\square$}}
%
% \iffalse meta-comment
%%
%% Define a new true-false toggle named \first. This is used inside the environment truefalse.
%% It is used to discriminate the first item from the rest.
% \fi
%<package>\newtoggle{first}
% 
% \iffalse meta-comment
%%
%% Macro \examdetailsii uses a 'tabular' environment. The space between rows is
% \fi
%<package>\renewcommand{\arraystretch}{1.5}
%
%
% \iffalse meta-comment
%%
%% \defaultletterspace is the default letter space percentage for macro \letterspace
% \fi
%<package>\def\defaultletterspace{10.0}
%<*driver>
\documentclass{ltxdoc}
\usepackage{fontspec}
\usepackage{xunicode}
\usepackage{xltxtra}
\usepackage{xgreek}
\setmainfont[Mapping=tex-text]{Linux Biolinum O}
\usepackage{schl}
\renewcommand{\abstractname}{Abstract}
\date{November, 2019}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
\DocInput{schl.dtx}
\end{document}
%</driver>
% \fi
%
%
% \changes{v0.1}{2019/06/22}{Initial version}
% \changes{v0.5}{2019/11/07}{2nd version}
% \changes{v1.0}{2019/11/07}{3rd version}
%
% \GetFileInfo{schl.sty}
%
% \DoNotIndex{\#,\$,\%,\&,\@,\\,\{,\},\^,\_,\~,\ }
% \DoNotIndex{\@ne}
% \DoNotIndex{\advance,\begingroup,\catcode,\closein}
% \DoNotIndex{\closeout,\day,\def,\edef,\else,\empty,\endgroup}
%
% \title{The \textsf{schl} package\thanks{This document
%   corresponds to \textsf{schl}~\fileversion,
%   dated~\filedate.}}
% \author{Tassos Tsesmetzis\\ \texttt{ttsesmetzis@gmail.com}}
%
% \maketitle
%
% \begin{abstract}
%   |schl| is a \XeLaTeX\  package that provides commands and environments suitable for
% document types that appear
%   in a classroom enviromnent. It's development is based on the Greek
%   school practice, but it may be usefull in other contexts also.
% \end{abstract}
%
% \section{Introduction}
% Worksheets and tests are common document types in a classroom. |schl| package comes with
% macros that facilitate the creation of these documents. It has list environments for
% questions, exercises and tasks. Other environments of the package can be used for tickable or
% multiple choice answers. There are also commands for typesetting solutions, hints
% and answers to exercises.
%
% Furthermore, you can set the name of the teacher,  subject, grade, headmaster, school, date, school year
% and use these to print school's logo or information about an exam. |schl| has commands
% to typeset headers for each document type, a macro for typing the points of an exercise and two
% commands for blank space. There is also a macro for typesetting a wish for good luck!
%
% By default, |schl| prints all macros that accept text as |undefined|. As of this version (\fileversion), Greek
% is the only supported language. You can set it with the option |greek|. Other languages can be supported
% by redefining package's internal macros.
%
% |schl| loads the packages |fontspec, enumitem, mdframed| and |amsmath|. It is written for \XeLaTeX, but
% can be used by any system that supports |fontspec|.
% \section{Macros}
% \subsection{Blank space}
% \DescribeMacro{\lowerdots}\DescribeMacro{\blankspace} Usually, we  need to designate blank space in a document. |schl| package has two commands for this. The first one |\lowerdots| \oarg{length}\marg{number}, prints \meta{number} dots. Optional argument \meta{length} sets the deviation from base line. It's  default value is |-0.3ex|.
% \iffalse meta-comment
%% This command prints dots that represent a blank space.
%% The first argument accepts a length. The deviation from the baseline.
%% Second argument is the number of dots that are printed.
%% From egreg's answer on tex.stackexchange.org
%% https://tex.stackexchange.com/questions/300207/repeat-characters-n-times
%% accessed June 06, 2019
% \fi
%    \begin{macrocode}
 \newcommand\lowerdots[2][-0.3ex]{%
   \begingroup
   \lccode`m=`.\relax
   \raisebox{#1}{\lowercase\expandafter{\romannumeral\number\number#2 000}}%
   \endgroup
 }
%    \end{macrocode}
%
% |\blankspace| \oarg{length}\marg{linelength} prints a line with length \meta{linelength}. The optional argument is the deviation from the base line and it's default value is |-0.3ex|. |\schl@rulethickness| is the default thickness for all |\blankspace| lines.
% \iffalse meta-comment
%%
%% A line that represents blank space.
%% First argument: deviation from base line.
%% Second argument: line width.
% \fi
%    \begin{macrocode}
\newcommand\blankspace[2][-0.3ex]{%
  \raisebox{#1}{\rule{#2}{\schl@rulethickness}}
 }
%    \end{macrocode}
%
% \subsection{Lists}
% |schl| package defines seven types of lists. These are |question|, |exercise|, |schltask|, |multichoice|, |tickchoice|, |truefalse| and |matchique|. |tickchoice|  comes also with a stared version |tickchoice*|. All of them depend on the package |enumitem|.
%
% \DescribeEnv{question}\DescribeEnv{exercise}\DescribeEnv{schltask}  These environments are  |enumerate|-like lists. List's |\item| is of the form \meta{type} \meta{counter}, where |type| is |\question@term| for |question|, |\exercise@term| for |exercise| and |\task@term| for |schltask|. \meta{counter} is the internal counter of the environment. 
% \iffalse meta-comment
%%
%% A list for questions
% \fi
%    \begin{macrocode}
\newlist{question}{enumerate}{1}
\setlist*[question]{%
  align=left,
  label=\bf \question@term\  \arabic*.,
  wide,
  leftmargin=0pt,
  labelindent=0pt
}
%    \end{macrocode}
%
% \iffalse meta-comment
%%
%% A list for exercises.
% \fi
%    \begin{macrocode}
\newlist{exercise}{enumerate}{1}
\setlist*[exercise]{%
  align=left,
  label=\bf\exercise@term\  \arabic*.,
  wide,
  leftmargin=0pt,
  labelindent=0pt
}
%    \end{macrocode}
%
% \iffalse meta-comment
%%
%% A list for tasks.
% \fi
%    \begin{macrocode}
\newlist{schltask}{enumerate}{1}
\setlist*[schltask]{%
  align=left,
  label=\bf\letterspace{\defaultletterspace}\task@term\  \arabic*,
  wide,
  leftmargin=0pt,
  labelindent=0pt
}
%    \end{macrocode}
%
% \DescribeMacro{\letterspace} The macro |\letterspace|\marg{number} is used to set the horizontal space of adjacent characters in a word. It is based on the |\addfontfeature| macro from the package |fontspec|.
% The argument \meta{number} is a percentage of the font size. In |schl| package is used to set the
% space between capital word letters.
%  \iffalse meta-comment
%%
%%  Space of capital word letters
%% \addfontfeature is from fontspec package.
%  \fi
%    \begin{macrocode}
\def\letterspace#1{\addfontfeature{LetterSpace=#1}}
%    \end{macrocode}
%
% \DescribeEnv{multichoice} The |multichoice| environment is used to typeset multiple choice answers.
% \iffalse meta-comment
%%
%% Insert multiple choice anwers.
%% Leave a blank line before and after \begin{multichoice} ... \end{multichoice}
%% for proper rendering.
% \fi
%    \begin{macrocode}
\newlist{multichoice}{enumerate*}{1}
\setlist*[multichoice]{
  labelindent=\parindent,
  label=\Alph*.,
  itemjoin=\hspace{\fill},
  before=\hspace{\fill},
  after=\hspace{\fill}
}
%    \end{macrocode}
%
% \DescribeEnv{tickchoice}\DescribeEnv{tickchoice*} The environments |tickchoice| and |tickchoice*| are variants of the |itemize| list. For both cases, each item is preceded by a square. |tickchoice| stacks items vertically,
% \iffalse meta-comment
%%
%% Leave a blank line before and after \begin{tickchoice} ... \end{tickchoice}
%% for proper rendering
% \fi
%    \begin{macrocode}
\newlist{tickchoice}{itemize}{1}
\setlist[tickchoice]{labelindent=\parindent,label={\large$\square$}}
%    \end{macrocode}
% while |tickchoice*| stacks them horizontally.
%    \begin{macrocode}
\newlist{tickchoice*}{itemize*}{1}
\setlist*[tickchoice*]{
  labelindent=\parindent,
  label={\large$\square$},
  itemjoin=\hspace{\fill},
  before=\hspace{\fill},
  after=\hspace{\fill}
}
%    \end{macrocode}
% \DescribeEnv{truefalse} |truefalse| is a variant of the |enumerate| environment. Each |\item| is divided in two parts. The
% first part is the text that follows the |\item| macro. The second part is a |\parbox| that prints |\trueabbr@term| and
% |\falseabbr@term|.
% \iffalse meta-comment
%% An environment to typeset true-false questions. It is defined with the enumitem package.
%% Each question is followed by the letters \trueabbr@term and \falseabbr@term.
%% It uses the calc package
%% 
%% Adapted from cfr's answer on
%% https://tex.stackexchange.com/questions/164613/adding-code-at-the-end-of-each-list-item
%% accessed 11/07/2019
% \fi
%    \begin{macrocode}
\newlist{truefalse}{enumerate}{1}
\setlist[truefalse]{label={\bf \arabic*.},%
  before*={%
    \let\defaultitem\item%      Save the standard definition of \item in a macro.
    \toggletrue{first}%                 Set the first toggle with initial value true.
    \def\item{%                 
      \iftoggle{first}{%
        \togglefalse{first}%              Set the first toggle to take the value false.
        \defaultitem\begin{minipage}[t]{0.8\linewidth minus \truefalselength}%
        }{%
        \end{minipage}\hfill\truefalselabel\defaultitem%
        \begin{minipage}[t]{0.8\linewidth minus \truefalselength}%
        }
      }% new, temporary defition of \item
    },
    after*={%   This takes care of adding the fill for the final item on
      %         the list and just makes sure that \item is reset to its standard definition
    \end{minipage}\hfill\truefalselabel% fill for final item in list
    \let\item\defaultitem% restore standard definition of \item
  }%
}
%    \end{macrocode}
% 
% \DescribeEnv{truefalse*} |truefalse*| is based on the |truefalse| environment. A line with
% |\trueabbr@term| and |\falseabbr@term| at the end prepends the list of items.
% In contrast with the |truefalse| environment, each |\item| ends with a pair of squares.
% \iffalse meta-comment
%% An environment to typeset true-false questions. It is defined with the enumitem package.
%% Each question is followed by two squares.
%% It uses the calc package
%% 
%% Adapted from cfr's answer on
%% https://tex.stackexchange.com/questions/164613/adding-code-at-the-end-of-each-list-item
%% accessed 11/07/2019
% \fi
%    \begin{macrocode}
\newlist{truefalse*}{enumerate}{1}
\setlist[truefalse*]{label={\bf \arabic*.},%
  before*={%
    \hfill\truefalselabel%      Print first line only with the terms True - False
    \let\defaultitem\item%      Save the standard definition of \item in a macro.
    \toggletrue{first}%                 Set the first toggle with initial value true.
    \def\item{%                 
      \iftoggle{first}{%
        \togglefalse{first}%              Set the first toggle to take the value false.
        \defaultitem\begin{minipage}[t]{0.8\linewidth minus \truefalselength}%
        }{%
        \end{minipage}\hfill\truefalsesquares\defaultitem%
        \begin{minipage}[t]{0.8\linewidth minus \truefalselength}%
        }
      }% new, temporary defition of \item
    },
    after*={%   This takes care of adding the fill for the final item on
      %         the list and just makes sure that \item is reset to its standard definition
    \end{minipage}\hfill% fill for final item in list
    \truefalsesquares
    \let\item\defaultitem% restore standard definition of \item
  }%
}
%    \end{macrocode}
%
% \DescribeMacro{matchingque} The macro |\matchingque|\marg{CSV}\marg{CSV} is used to typeset matching questions. \meta{CSV}
% are comma separated values. The \meta{CSV}s of the first argument are the parts of the matching questions that will 
% be print in the left column. Similarly, the \meta{CSV} of the second argument are going to be printed on the right
% column of the matching questions.
%    \begin{macrocode}
\newcommand\matchingque[3][300pt]{%
  \begin{center}
    \parbox[c]{#1}{
      \parbox[c]{\leftmatchwidth}{%
        \begin{leftmatching}
          \@for\tmp:=#2%
          \do{%
          \item \tmp
          }
        \end{leftmatching}
      }\hfill%
      \parbox[c]{\rightmatchwidth}{%
        \begin{rightmatching}
          \@for\tmp:=#3%
          \do{%
          \item \tmp
          }
        \end{rightmatching}
      }
    }
  \end{center}
}
%    \end{macrocode}
%
% \DescribeEnv{leftmatching}\DescribeMacro{rightmatching} Environments |leftmatching| and |rightmatching| are used to
% typeset each column in |\matchingque|.
%    \begin{macrocode}
\newlist{leftmatching}{enumerate}{1}
\newlist{rightmatching}{enumerate}{1}
\setlist*[leftmatching]{label=\bf\Alph*.}
\setlist*[rightmatching]{label=\bf\arabic*.}
%    \end{macrocode}
% \subsection{Answers, solutions and hints}
% \DescribeMacro{\answer} Macro |\answer|\marg{text} prints |(\answerabbr@term \meta{text})| at the right end of the current line.
% \iffalse meta-comment
%%
%% Write the answer of an exercise.
% \fi
%    \begin{macrocode}
\newcommand\answer[2][\hfill\footnotesize]{%
  {#1 (\answerabbr@term: #2)}
}
%    \end{macrocode}
%
% \DescribeMacro{\solution} Macro |\solution|\marg{text} is used to typeset the solution of an exercise. 
% \iffalse meta-comment
%%
%% With this command you write the solution of an exercise.
% \fi
%    \begin{macrocode}
\newcommand\solution[1]{%
  \par\noindent\phantom{.}\hfill\textbf{\solution@term}\hfill\phantom{.}\par%
  \noindent #1
}
%    \end{macrocode}
%
% \DescribeMacro{\hint} |schl| provides the macro |\hint|\marg{text} for typesetting exercise hints.
% \iffalse meta-comment
%%
%% A macro for exercise hints.
% \fi
%    \begin{macrocode}
\newcommand\hint[2][\par\noindent\footnotesize]{%
  {#1\textbf{\hint@term:} #2}%
}
%    \end{macrocode}
%
% \DescribeMacro{\deadline} A feature of homework assignments is a deadline date. |\deadline|\marg{date} prints |\deadline@term| followed by argument \meta{date}.
% \iffalse meta-comment
%%
%% Print the deadline of an assignment
% \fi
%    \begin{macrocode}
\newcommand\deadline[2][\noindent\bf]{%
  {#1\deadline@term}: #2%
}
%    \end{macrocode}
% 
% \DescribeMacro{\remark} Add a remark in a document. |\remark|\marg{text} prints |\remark@term| followed by argument \meta{text}.
% \iffalse meta-comment
%%
%% Add a remark to a document.
% \fi
%    \begin{macrocode}
\newcommand\remark[2][\noindent\bf]{%
  {#1\remark@term}: #2%
}
%    \end{macrocode}
%
% \DescribeMacro{\reminder} Add a reminder in a document. |\reminder|\marg{text} prints |\reminder@term| followed by argument \meta{text}.
% \iffalse meta-comment
%%
%% Add a remark to a document.
% \fi
%    \begin{macrocode}
\newcommand\reminder[2][\noindent\bf]{%
  {#1\reminder@term}: #2%
}
%    \end{macrocode}
%
% \subsection{Titles and headers}
% \DescribeMacro{\heading} Common document types  in a school environment are the worksheet, various tests and final written exams. The macro |\heading|\marg{text} gives a generic header for all these documents.
% \iffalse meta-comment
%%
%% Large centered text in bold face.
% \fi
%    \begin{macrocode}
\newcommand\heading[1]{%
  \begin{center}
    {\bf\large #1}
  \end{center}
}
%    \end{macrocode}
%
% \DescribeMacro{\worksheethd} Macro |\worksheethd|\marg{text} sets the title of a worksheet. It appends \meta{text} to |\worksheet@term|.
% \iffalse meta-comment
%%
%% The title of a worksheet.
%% Argument is a text to be appended in \worksheet@term
% \fi
%    \begin{macrocode}
\newcommand\worksheethd[1]{%
  \heading{\worksheet@term\  #1}
}
%    \end{macrocode}
%
% \DescribeMacro{\examhd} |\examhd|\oarg{text}\marg{text} is used to set the title of tests. The optional argument has the default value |\termtest@term|. 
% \iffalse
%%
%% Exam and term test title.
% \fi
%    \begin{macrocode}
\newcommand\examhd[2][\termtest@term]{%
  \heading{#1 #2}
}
%    \end{macrocode}
%
% \DescribeMacro{\finalexamhd} Titles for end year exams have a standardized form in Greek schools. |\exams@term| is followed by information about the exam. Then comes |\period@term| with the exam period after it. |\finalexamhd|\marg{info}\marg{period} is used for these cases.
% \iffalse meta-comment
%%
%% Default headers for final exams.
% \fi
%    \begin{macrocode}
\newcommand\finalexamhd[2]{%
  \heading{\letterspace{\defaultletterspace} #1 \exams@term\\[0.5ex] \period@term\  #2}
}
%    \end{macrocode}
%
% \DescribeMacro{\schl@framedbox} |\schl@framedbox|\marg{text} prints \meta{text} in a centered frame box. It is
% used by |\theorypart| and |\exercisepart|.
% \iffalse meta-comment
%%
%% A generic header for centered framed text.
% \fi
%    \begin{macrocode}
\newcommand\schl@framedbox[1]{%
  \begin{center}
    \fbox{\large{\bf\letterspace{\defaultletterspace} #1} }%
  \end{center}
}
%    \end{macrocode}
%
% \DescribeMacro{\theorypart}\DescribeMacro{\exercisepart} Sometimes theory and exercise sections constitute
% a written test. Macros |\theorypart| and |\exercisepart| print headers for those parts.
%    \begin{macrocode}
\newcommand\theorypart{%
  \schl@framedbox{\theoryheader@term\!}
}
%    \end{macrocode}
% and
%    \begin{macrocode}
\newcommand\exercisepart{%
  \schl@framedbox{\exerciseheader@term\!}
}
%    \end{macrocode}
% 
% \subsection{School information}
% \DescribeMacro{\school}\DescribeMacro{\headmaster}\DescribeMacro{\teacher}\DescribeMacro{\subject}\DescribeMacro{\grade}\DescribeMacro{\schoolyear}\DescribeMacro{\setdate}\DescribeMacro{\examtime} The macros |\school|\marg{text}, |\headmaster|\marg{name}, |\teacher|\marg{name}, |\subject|\marg{text}, |\grade|\marg{text}, |\schoolyear|\marg{year}, |\setdate|\marg{date}, |\examtime|\marg{time} define and set the value of internal macros.
% \iffalse meta-comment
%%
%% Set subject, grade, date, school year etc.
% \fi
%    \begin{macrocode}
\newcommand\school[1]{\def\schl@school{#1}}
\newcommand\headmaster[1]{\def\schl@headmaster{#1}}
\newcommand\teacher[1]{\def\schl@teacher{#1}}
\newcommand\subject[1]{\def\schl@subject{#1}}
\newcommand\grade[1]{\def\schl@grade{#1}}
\newcommand\schoolyear[1]{\def\schl@schoolyear{#1}}
\newcommand\setdate[1]{\def\schl@date{#1}}
\newcommand\examtime[1]{\def\schl@examtime{#1}}
%    \end{macrocode}
%
% \DescribeMacro{\authorities} In a similar vein, |\authorities|\marg{text} is used to define the internal macro |\schl@authorities|.
%    \begin{macrocode}
\newcommand\authorities[1]{\def\schl@authorities{#1}}
%    \end{macrocode}
%
% \subsection{Other macros for tests}
% \DescribeMacro{\points} |\points|\oarg{macro}\marg{number} is used to designate the points of an exercise. \marg{number} is the number of points for the current exercise, while \oarg{macro} can be used to control the space just before the points.
% \iffalse meta-comment
%%
%% Print the points of an exescise.
% \fi
%    \begin{macrocode}
\newcommand{\points}[2][\hfill\bf\footnotesize]{%
{#1(\points@term{#2}\  #2)}
}
%    \end{macrocode}
%
% \DescribeMacro{\fullname} |\fullname|\marg{text} prints |\fullname@term| followed by \meta{text}. 
% \iffalse meta-comment
%%
%% A field for writing the full name.
% \fi
%    \begin{macrocode}
\newcommand\fullname[2][\noindent\rmfamily]{%
  {#1\fullname@term}: #2%
}
%    \end{macrocode}
%
% \DescribeMacro{\datefield} Similarly, |\datefield|\marg{text} prints |\date@term| with \meta{text} after it.
% \iffalse meta-comment
%%
%% A field for writing the date.
% \fi
%    \begin{macrocode}
\newcommand\datefield[2][\noindent\bf]{%
  {#1\date@term}: #2%
}
%    \end{macrocode}
%
% \DescribeMacro{\getdate} |\getdate| prints |\schl@date|. The last macro can be set with |\setdate|.
% \iffalse meta-comment
%%
%% Get \schl@date. 
%% \schl@date is set with \setdate.
% \fi
%    \begin{macrocode}
\newcommand\getdate{\schl@date}
%    \end{macrocode}
%
% \DescribeMacro{\duration} |\duration|\marg{duration} prints |\duration@term| with \meta{duration} after it.
% \iffalse meta-comment
%%
%% Show the duration of the test.
% \fi
%    \begin{macrocode}
\newcommand\duration[2][\noindent\bf]{%
  {#1\duration@term}: #2%
}
%    \end{macrocode}
%
% \DescribeMacro{\schoollogo} |\schoollogo|\marg{width} prints |\schl@school, \schl@grade, \schl@subject| and |\schl@teacher|. \meta{width} is the length of the |\parbox|.
% \iffalse meta-comment
%%
%% School logo
%% Argument 1 is the length of the parbox.
% \fi
%    \begin{macrocode}
\def\schoollogo#1{%
  \parbox[t]{#1}{%
    \schl@school\\%
    \schl@grade\\%
    \schl@subject\\%
    \schl@teacher
  }
}
%    \end{macrocode}
%
% \DescribeMacro{\authoritylogo} |\authoritylogo|\oarg{number} prints |\sch@authorities| and |\schl@school|. Argument \meta{number} is a multiplier for |\baselineskip|. This spaces is added above the macro.
% \iffalse meta-comment
%%
%% Logo for exams.
%% Argument is a multiplier for \baselineskip.
% \fi
%    \begin{macrocode}
\newcommand\authoritylogo[1][1.5]{%
  \noindent\parbox[t][\height]{0.4\textwidth}{%
    \centering%

    \vspace{#1\baselineskip}

    {\schl@authorities}

    \vspace{3\lineskip}

    {\small\letterspace{\defaultletterspace}\MakeUppercase{\schl@school}}
  }
}
%    \end{macrocode}
%
% \DescribeMacro{\signatures} Some types of written tests end with the names of the headmaster and the teacher(s) followed by handwritten signatures. |\signatures|\oarg{role}\marg{signer(s)} prints \meta{role}. After it follow the name(s) of the \meta{signer(s)}, one per line. \meta{Signer(s)} is a comma separated list of values. The default value for \meta{role} is |\headmaster@term|. |\signatureslength| is the length of the |\signatures| block and |\signatureslineskip| is the length between adjucent lines.
%    \begin{macrocode}
\newcommand\signatures[2][\headmaster@term]{%
  \parbox[t]{\signatureslength}{%
    \setlength \baselineskip{\signaturelineskip}
    \begin{center}
      #1%
      \@for\arg:=#2
      \do {%
        \\%
        \arg%
      }
    \end{center}
  }
}
%    \end{macrocode}
%
% \DescribeMacro{\wish} |\wish| prints |\schl@wish|, a default wish for tests.
% \iffalse meta-comment
%%
%% A wish
% \fi
%    \begin{macrocode}
\newcommand\wish[1][\schl@wish]{%
  \begin{center}
      {\LARGE\bf #1}
  \end{center}
}
%    \end{macrocode}
%
% \PrintChanges
% \StopEventually{\PrintIndex}
% \Finale
\endinput